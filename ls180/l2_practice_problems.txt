# Set 1
1. SQL is a special-purpose language.
2. data definition language, data manipulation language, data control language
3. 'canoe', 'a long road', 'weren''t', '"No way!"'
4. ||
5. lower; SELECT lower('HeLlO');
6. t, f
7. SELECT trunc(4 * pi() * 26.3 ^ 2);

# Set 2
1. Both store text data. varchar enforces a character length that you have to define. Text columns do not have a limit to the number of characters they can hold.
2. Integer stores real numbers. Real stores floating-point numbers. Decimal stores values to a defined level of precision.
3. 2147483647
4. timestamp stores date and time. date only stores date.
5. No

# Set 3
1.
CREATE TABLE people (
    name varchar(20),
    age integer,
    occupation varchar(50)
);
2.
INSERT INTO people
VALUES ('Abby',      34, 'biologist'),
       ('Mu''nisah', 26, NULL),
       ('Mirabelle', 40, 'contractor');
3.
SELECT * FROM people WHERE name = 'Mu''nisah';
SELECT * FROM people WHERE age = 26;
SELECT * FROM people WHERE occupation IS NULL;
SELECT * FROM people LIMIT 1 OFFSET 1;

4.
CREATE TABLE birds (
    name varchar(50),
    length decimal(3, 1),
    wingspan decimal (3, 1),
    family varchar(50),
    extinct boolean
);

5.
INSERT INTO birds
VALUES ('Spotted Towhee', 21.6, 26.7, 'Emberizidae', false),
       ('American Robin', 25.5, 36.0, 'Turdidae', false),
       ('Greater Koa Finch', 19.0, 24.0, 'Fringillidae', true),
       ('Carolina Parakeet', 33.0, 55.8, 'Psittacidae', true),
       ('Common Kestrel', 35.5, 73.5, 'Falconidae', false);

6.
SELECT name, family
FROM birds
WHERE extinct = false
ORDER BY length DESC;

7.
SELECT round(avg(wingspan), 2) AS avg_wingspan, min(wingspan) as min_wingspan, max(wingspan) as max_wingspan
FROM birds;

8.
CREATE TABLE menu_items (
    item varchar(20),
    prep_time integer,
    ingredient_cost decimal(4, 2),
    sales integer,
    menu_price decimal(4, 2)
);

9. 
INSERT INTO menu_items
VALUES ('omelette', 10, 1.5, 182, 7.99),
       ('tacos', 5, 2, 254, 8.99),
       ('oatmeal', 1, 0.5, 79, 5.99);

10. 
SELECT item, (menu_price - ingredient_cost) AS profit
FROM menu_items
ORDER BY profit DESC LIMIT 1;

11.
SELECT item, menu_price, ingredient_cost,
       round(prep_time/60.0 * 13.0, 2) AS labor,
       menu_price - ingredient_cost - round(prep_time/60.0 * 13.0, 2) AS profit
FROM   menu_items
ORDER  BY profit DESC;

# Set 4
1. 
Drops the table "public.films" if it exists, then creates the table with fields title, year, and genre. Adds three rows to the table.
The table does not exist in the database, skipping the command. Create table, insert 3 rows.

2. SELECT * FROM films;
3. 
SELECT * FROM films
WHERE length(title) < 12;
4. 
ALTER TABLE films
ADD COLUMN director varchar(255),
ADD COLUMN duration integer;
5.
UPDATE films
SET director = 'John McTiernan',
    duration = 132
WHERE title = 'Die Hard';

UPDATE films
SET director = 'Michael Curtiz',
    duration = 102
WHERE title = 'Casablanca';

UPDATE films
SET director = 'Francis Ford Coppola',
    duration = 113
WHERE title = 'The Conversation';
6.
INSERT INTO films (title, year, genre, director, duration)
VALUES ('1984', 1956, 'scifi', 'Michael Anderson', 90),
       ('Tinker Tailor Soldier Spy', 2011, 'espionage', 'Tomas Alfredson', 127),
       ('The Birdcage', 1996, 'comedy', 'Mike Nichols', 118);
7.
SELECT title, (extract("year" from current_date) - "year") AS age
FROM films
ORDER BY age;
8. 
SELECT title, duration
FROM films
WHERE duration > 120
ORDER BY duration DESC;
9.
SELECT title
FROM films
ORDER BY duration DESC
LIMIT 1;
